syntax = "proto3";

package com.dbmapp.grpc;

service FilteringSorting {
  // Unary: Filter table by one condition
  rpc FilterData(FilterRequest) returns (FilterResponse);

  // Unary: Sort table by a single column
  rpc SortData(SortRequest) returns (SortResponse);

  // Unary: Modify column type
  rpc ModifyColumnType(ModifyColumnRequest) returns (ModifyColumnResponse);

  // Bi-directional streaming: Interactive multi-filter
  rpc InteractiveFilter(stream InteractiveFilterRequest) returns (stream RowData);
}

// ========== Messages ==========

// --- Filter Request ---
message FilterRequest {
  string schemaName = 1;
  string tableName = 2;
  string columnName = 3;
  string filterCondition = 4; // =, !=, >, <, LIKE, etc.
  string value = 5;
}

message FilterResponse {
  repeated RowData filteredRows = 1;
}

// --- Sort Request ---
message SortRequest {
  string schemaName = 1;
  string tableName = 2;
  string columnName = 3;
  string sortOrder = 4; // ASC or DESC
}

message SortResponse {
  repeated RowData sortedRows = 1;
}

// --- Modify Column Type ---
message ModifyColumnRequest {
  string schemaName = 1;
  string tableName = 2;
  string columnName = 3;
  string newDataType = 4;
}

message ModifyColumnResponse {
  bool success = 1;
  string message = 2;
}

// --- Interactive Filtering ---
message InteractiveFilterRequest {
  string columnName = 1;
  string filterCondition = 2;
  string value = 3;
}

message RowData {
  repeated string values = 1;
}
